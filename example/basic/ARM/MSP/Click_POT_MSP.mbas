'
'Example for POT Click
'
'    Date          : Dec 2018.
'    Author        : Nemanja Medakovic
'
'Test configuration MSP :
'    
'    MCU              : MSP432
'    Dev. Board       : Clicker 2 for MSP432
'    ARM Compiler ver : v6.0.0.0
'
'---
'
'Description :
'
'The application is composed of three sections :
'
'- System Initialization - Initializes peripherals and pins.
'- Application Initialization - Initializes GPIO interface and ADC.
'- Application Task - (code snippet) - Makes the averaged results by using the desired number of samples of AD conversion.
'  The averaged results will be calculated to millivolts [mV] and sent to the uart terminal.
'Note : The AD conversion will be performed on the analog (AN) pin on the mikrobus 1.
'
'
program Click_POT_MSP

include Click_POT_types
include Click_POT_config
const
    N_SAMPLES as uint16_t = 100
    ADC_V_REF_MV as uint16_t = 3303
    ADC_12BIT_RESOL as uint16_t = 4096
    ADC_10BIT_RESOL as uint16_t = 1024
    
dim
    adcRead as uint16_t 
    nSamples as uint16_t 
    adcMax as uint16_t 
    adcMin as uint16_t 
    adcAvrg as float 
    text as char[30] 
    
sub procedure systemInit() 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_AN_PIN, _GPIO_INPUT) 
    mikrobus_logInit(_MIKROBUS2, 9600) 
    mikrobus_logWrite("*** Initializing... ***", _LOG_LINE) 
    Delay_ms(100) 
end sub

sub procedure applicationInit() 
    pot_gpioDriverInit(T_POT_P(@_MIKROBUS1_GPIO)) 
    Delay_ms(100) 
    ADC1_Init() 
    Delay_ms(100) 
    mikrobus_logWrite("** POT is initialized **", _LOG_LINE) 
    mikrobus_logWrite("", _LOG_LINE) 
end sub

sub procedure applicationTask() 
    nSamples = 0
    while (nSamples < N_SAMPLES) 
        adcRead = ADC1_Get_Sample(15) 
        if (nSamples = 0) then 
            adcMax = adcRead 
            adcMin = adcRead 
        end if
        if (adcRead > adcMax) then 
            adcMax = adcRead 
        else 
            if (adcRead < adcMin) then 
                adcMin = adcRead 
            end if
        end if
        Delay_ms(1) 
        inc(nSamples)
    wend
    adcAvrg = adcMax 
    adcAvrg = adcAvrg + adcMin 
    adcAvrg = adcAvrg / 2 
    adcAvrg = adcAvrg / ADC_12BIT_RESOL 
    adcAvrg = adcAvrg * ADC_V_REF_MV 
    adcRead = adcAvrg 
    WordToStr(adcRead, text) 
    mikrobus_logWrite("** AN : ", _LOG_TEXT) 
    mikrobus_logWrite(text, _LOG_TEXT) 
    mikrobus_logWrite(" mV **", _LOG_LINE) 
    Delay_ms(100) 
end sub

main :

    systemInit() 
    applicationInit() 
    while (1) 
        applicationTask() 
    wend
end.